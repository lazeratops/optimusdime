// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	document "github.com/lazeratops/optimusdime/src/document"

	mock "github.com/stretchr/testify/mock"
)

// Importer is an autogenerated mock type for the Importer type
type Importer struct {
	mock.Mock
}

// Import provides a mock function with given fields: filePath
func (_m *Importer) Import(filePath string) *document.Document {
	ret := _m.Called(filePath)

	if len(ret) == 0 {
		panic("no return value specified for Import")
	}

	var r0 *document.Document
	if rf, ok := ret.Get(0).(func(string) *document.Document); ok {
		r0 = rf(filePath)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*document.Document)
		}
	}

	return r0
}

// NewImporter creates a new instance of Importer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewImporter(t interface {
	mock.TestingT
	Cleanup(func())
}) *Importer {
	mock := &Importer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
